// Code generated by reverse-kube-resource. DO NOT EDIT.

package examples

import (
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	storagev1 "k8s.io/api/storage/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

var (
	// ServiceAccount "csi-cinder-controller-sa"
	csiCinderControllerSaServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "csi-cinder-controller-sa",
			Namespace: "kube-system",
		},
	}

	// ServiceAccount "csi-cinder-node-sa"
	csiCinderNodeSaServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "csi-cinder-node-sa",
			Namespace: "kube-system",
		},
	}

	// StorageClass "csi-cinder-sc-delete"
	csiCinderScDeleteStorageClass = storagev1.StorageClass{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-cinder-sc-delete",
		},
	}

	// StorageClass "csi-cinder-sc-retain"
	csiCinderScRetainStorageClass = storagev1.StorageClass{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-cinder-sc-retain",
		},
	}

	// ClusterRole "csi-attacher-role"
	csiAttacherRoleClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-attacher-role",
		},
	}

	// ClusterRole "csi-provisioner-role"
	csiProvisionerRoleClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-provisioner-role",
		},
	}

	// ClusterRole "csi-snapshotter-role"
	csiSnapshotterRoleClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-snapshotter-role",
		},
	}

	// ClusterRole "csi-resizer-role"
	csiResizerRoleClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-resizer-role",
		},
	}

	// ClusterRole "csi-nodeplugin-role"
	csiNodepluginRoleClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-nodeplugin-role",
		},
	}

	// ClusterRoleBinding "csi-attacher-binding"
	csiAttacherBindingClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-attacher-binding",
		},
	}

	// ClusterRoleBinding "csi-provisioner-binding"
	csiProvisionerBindingClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-provisioner-binding",
		},
	}

	// ClusterRoleBinding "csi-snapshotter-binding"
	csiSnapshotterBindingClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-snapshotter-binding",
		},
	}

	// ClusterRoleBinding "csi-resizer-binding"
	csiResizerBindingClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-resizer-binding",
		},
	}

	// ClusterRoleBinding "csi-nodeplugin-binding"
	csiNodepluginBindingClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "csi-nodeplugin-binding",
		},
	}

	// Role "external-resizer-cfg"
	externalResizerCfgRole = rbacv1.Role{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "external-resizer-cfg",
			Namespace: "kube-system",
		},
	}

	// RoleBinding "csi-resizer-role-cfg"
	csiResizerRoleCfgRoleBinding = rbacv1.RoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "csi-resizer-role-cfg",
			Namespace: "kube-system",
		},
	}

	// Service "openstack-cinder-csi-controllerplugin"
	openstackCinderCsiControllerpluginService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name: "openstack-cinder-csi-controllerplugin",
			Labels: map[string]string{
				"app":       "openstack-cinder-csi",
				"chart":     "openstack-cinder-csi-1.3.8",
				"component": "controllerplugin",
				"heritage":  "Helm",
				"release":   "cinder-csi",
			},
		},
	}

	// DaemonSet "openstack-cinder-csi-nodeplugin"
	openstackCinderCsiNodepluginDaemonSet = appsv1.DaemonSet{
		ObjectMeta: metav1.ObjectMeta{
			Name: "openstack-cinder-csi-nodeplugin",
			Labels: map[string]string{
				"app":       "openstack-cinder-csi",
				"chart":     "openstack-cinder-csi-1.3.8",
				"component": "nodeplugin",
				"heritage":  "Helm",
				"release":   "cinder-csi",
			},
		},
	}

	// StatefulSet "openstack-cinder-csi-controllerplugin"
	openstackCinderCsiControllerpluginStatefulSet = appsv1.StatefulSet{
		ObjectMeta: metav1.ObjectMeta{
			Name: "openstack-cinder-csi-controllerplugin",
			Labels: map[string]string{
				"app":       "openstack-cinder-csi",
				"chart":     "openstack-cinder-csi-1.3.8",
				"component": "controllerplugin",
				"heritage":  "Helm",
				"release":   "cinder-csi",
			},
		},
	}

	// CSIDriver "cinder.csi.openstack.org"
	cinderCsiOpenstackOrgCsidriver = storagev1.CSIDriver{
		ObjectMeta: metav1.ObjectMeta{
			Name: "cinder.csi.openstack.org",
		},
	}
)
