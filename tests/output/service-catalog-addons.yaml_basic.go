// Code generated by reverse-kube-resource. DO NOT EDIT.

package examples

import (
	appsv1 "k8s.io/api/apps/v1"
	batchv1 "k8s.io/api/batch/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	apiresource "k8s.io/apimachinery/pkg/api/resource"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1unstructured "k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
	utilintstr "k8s.io/apimachinery/pkg/util/intstr"
)

var (
	// Job "service-catalog-addons-service-binding-usage-controller-cleanup"
	serviceCatalogAddonsServiceBindingUsageControllerCleanupJobBackoffLimit1 int32 = 1

	serviceCatalogAddonsServiceBindingUsageControllerCleanupJob = batchv1.Job{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-binding-usage-controller-cleanup",
			Labels: map[string]string{
				"app":      "service-catalog-addons-service-binding-usage-controller",
				"chart":    "service-binding-usage-controller-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
			Annotations: map[string]string{
				"helm.sh/hook":               "pre-delete",
				"helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded",
				"helm.sh/hook-weight":        "1",
			},
		},
		Spec: batchv1.JobSpec{
			BackoffLimit: &serviceCatalogAddonsServiceBindingUsageControllerCleanupJobBackoffLimit1,
			Template: corev1.PodTemplateSpec{
				ObjectMeta: metav1.ObjectMeta{
					Annotations: map[string]string{
						"sidecar.istio.io/inject": "false",
					},
				},
				Spec: corev1.PodSpec{
					Containers: []corev1.Container{
						corev1.Container{
							Name:  "job",
							Image: "eu.gcr.io/kyma-project/tpi/k8s-tools:20211022-85284bf9",
							Command: []string{
								"bash",
								"-c",
								"MAX_RETRIES=60\ncnt=0\n\nkubectl delete usagekinds.servicecatalog.kyma-project.io deployment > /dev/null 2>&1\n\nwhile :\n  do\n    kubectl get usagekinds.servicecatalog.kyma-project.io deployment -o=jsonpath='{.metadata.name}' > /dev/null 2>&1\n    if [[ $? -eq \"deployment\" ]]; then\n      ((cnt++))\n      if (( cnt > $MAX_RETRIES )); then\n      echo \"Max retries has been reached (retries $MAX_RETRIES). Exit.\"\n      exit 1\n    fi\n\n    echo \"Removing usagekinds deployment...\"\n    sleep 1\n    else\n      echo \"usagekinds deployment has been removed\"\n      break\n    fi\ndone",
							},
						},
					},
					RestartPolicy:      "Never",
					ServiceAccountName: "service-catalog-addons-service-binding-usage-controller",
				},
			},
		},
	}

	// Unstructured "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiUnstructuredPodSecurityPolicy = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "policy/v1beta1",
			"kind":       "PodSecurityPolicy",
			"metadata": map[string]any{
				"labels": map[string]any{
					"app":                       "service-catalog-ui",
					"chart":                     "service-catalog-ui-0.1.0",
					"heritage":                  "Helm",
					"kyma-project.io/component": "frontend",
					"release":                   "service-catalog-addons",
				},
				"name": "service-catalog-addons-service-catalog-ui",
			},
			"spec": map[string]any{
				"allowPrivilegeEscalation": false,
				"fsGroup": map[string]any{
					"ranges": []any{
						map[string]any{
							"max": 65535,
							"min": 1,
						},
					},
					"rule": "MustRunAs",
				},
				"hostIPC":                false,
				"hostNetwork":            false,
				"hostPID":                false,
				"privileged":             false,
				"readOnlyRootFilesystem": true,
				"runAsUser": map[string]any{
					"rule": "MustRunAsNonRoot",
				},
				"seLinux": map[string]any{
					"rule": "RunAsAny",
				},
				"supplementalGroups": map[string]any{
					"ranges": []any{
						map[string]any{
							"max": 65535,
							"min": 1,
						},
					},
					"rule": "MustRunAs",
				},
				"volumes": []any{
					"emptyDir", "configMap",
				},
			},
		},
	}

	// ServiceAccount "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-addons-service-binding-usage-controller",
			Namespace: "kyma-system",
			Labels: map[string]string{
				"app":      "service-catalog-addons-service-binding-usage-controller",
				"chart":    "service-binding-usage-controller-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
		},
	}

	// ServiceAccount "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiServiceAccount = corev1.ServiceAccount{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-addons-service-catalog-ui",
			Namespace: "kyma-system",
			Labels: map[string]string{
				"app": "service-catalog-addons-service-catalog-ui",
			},
		},
	}

	// ConfigMap "service-binding-usage-controller-process-sbu-spec"
	serviceBindingUsageControllerProcessSbuSpecConfigMap = corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-binding-usage-controller-process-sbu-spec",
			Labels: map[string]string{
				"app":   "service-catalog-addons-service-binding-usage-controller",
				"chart": "service-binding-usage-controller-0.1.0",
			},
		},
	}

	// ConfigMap "service-binding-usage-controller-dashboard"
	serviceBindingUsageControllerDashboardConfigMap = corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-binding-usage-controller-dashboard",
			Labels: map[string]string{
				"app":               "monitoring-grafana",
				"grafana_dashboard": "1",
			},
		},
		Data: map[string]string{
			"service-binding-usage-controller-dashboard.json": "{\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": \"-- Grafana --\",\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": false,\n  \"gnetId\": null,\n  \"graphTooltip\": 0,\n  \"id\": 7,\n  \"iteration\": 1559633272716,\n  \"links\": [],\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 50,\n      \"panels\": [],\n      \"title\": \"Runtime Business Metrics\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 48,\n      \"legend\": {\n        \"avg\": true,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null as zero\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"rate(controller_runtime_reconcile_latency_sum{controller=\\\"service_binding_usage_controller\\\"}[1m]) / rate(controller_runtime_reconcile_latency_count{controller=\\\"service_binding_usage_controller\\\"}[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"ServiceBindingUsageController\",\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"rate(controller_runtime_reconcile_latency_sum{controller=\\\"usage_kind_controller\\\"}[1m]) / rate(controller_runtime_reconcile_latency_count{controller=\\\"usage_kind_controller\\\"}[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"UsageKindController\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Reconcile Latency\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": \"Average reconcile time [s]\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 1\n      },\n      \"id\": 44,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null as zero\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"increase(controller_runtime_reconcile_queue_length{controller=\\\"service_binding_usage_controller\\\"}[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"ServiceBindingUsageController\",\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"increase(controller_runtime_reconcile_queue_length{controller=\\\"usage_kind_controller\\\"}[1m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"UsageKindController\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Queue Length\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"decimals\": 0,\n          \"format\": \"short\",\n          \"label\": \"Average Queue Length\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 9\n      },\n      \"id\": 46,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 2,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"stack\": false,\n      \"steppedLine\": true,\n      \"targets\": [\n        {\n          \"expr\": \"controller_runtime_reconcile_errors_total{controller=\\\"service_binding_usage_controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"ServiceBindingUsageController\",\n          \"refId\": \"A\"\n        },\n        {\n          \"expr\": \"controller_runtime_reconcile_errors_total{controller=\\\"usage_kind_controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"UsageKindController\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Total Errors\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"decimals\": 0,\n          \"format\": \"short\",\n          \"label\": \"Amount of errors\",\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"id\": 42,\n      \"panels\": [],\n      \"title\": \"Runtime Metrics\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 18\n      },\n      \"id\": 16,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"go_gc_duration_seconds{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{quantile}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"GC duration [s]\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 18\n      },\n      \"id\": 24,\n      \"isNew\": true,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"process_open_fds{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{service}}\",\n          \"metric\": \"process_open_fds\",\n          \"refId\": \"A\",\n          \"step\": 4\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"open fds\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 18\n      },\n      \"id\": 18,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"go_threads{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{pod}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Gothreads\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {},\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 25\n      },\n      \"id\": 22,\n      \"isNew\": true,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"alloc rate\",\n          \"yaxis\": 2\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"go_memstats_alloc_bytes{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"bytes allocated\",\n          \"metric\": \"go_memstats_alloc_bytes\",\n          \"refId\": \"A\",\n          \"step\": 4\n        },\n        {\n          \"expr\": \"rate(go_memstats_alloc_bytes_total{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}[30s])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"alloc rate\",\n          \"metric\": \"go_memstats_alloc_bytes_total\",\n          \"refId\": \"B\",\n          \"step\": 4\n        },\n        {\n          \"expr\": \"go_memstats_stack_inuse_bytes{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"stack inuse\",\n          \"metric\": \"go_memstats_stack_inuse_bytes\",\n          \"refId\": \"C\",\n          \"step\": 4\n        },\n        {\n          \"expr\": \"go_memstats_heap_inuse_bytes{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"hide\": false,\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"heap inuse\",\n          \"metric\": \"go_memstats_heap_inuse_bytes\",\n          \"refId\": \"D\",\n          \"step\": 4\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"go memstats\",\n      \"tooltip\": {\n        \"msResolution\": false,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"Bps\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"fill\": 1,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 25\n      },\n      \"id\": 17,\n      \"legend\": {\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"go_goroutines{service=\\\"service-catalog-addons-service-binding-usage-controller\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{pod}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Goroutines\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"label\": null,\n          \"logBase\": 1,\n          \"max\": null,\n          \"min\": null,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 32\n      },\n      \"id\": 38,\n      \"panels\": [],\n      \"title\": \"Kubernetes Metrics\",\n      \"type\": \"row\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {\n        \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n        \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 33\n      },\n      \"id\": 10,\n      \"isNew\": false,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum by(container) (container_memory_usage_bytes{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\", container!=\\\"POD\\\"})\",\n          \"format\": \"time_series\",\n          \"instant\": false,\n          \"interval\": \"10s\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Current: {{container}}\",\n          \"metric\": \"container_memory_usage_bytes\",\n          \"refId\": \"A\",\n          \"step\": 15\n        },\n        {\n          \"expr\": \"kube_pod_container_resource_requests_memory_bytes{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Requested: {{container}}\",\n          \"metric\": \"kube_pod_container_resource_requests_memory_bytes\",\n          \"refId\": \"B\",\n          \"step\": 20\n        },\n        {\n          \"expr\": \"kube_pod_container_resource_limits_memory_bytes{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Limit: {{container}}\",\n          \"metric\": \"kube_pod_container_resource_limits_memory_bytes\",\n          \"refId\": \"C\",\n          \"step\": 20\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Memory Usage\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {\n        \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n        \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 33\n      },\n      \"id\": 8,\n      \"isNew\": false,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sum by (container)(rate(container_cpu_usage_seconds_total{image!=\\\"\\\",container!=\\\"POD\\\",pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}[1m]))\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{container}}\",\n          \"refId\": \"A\",\n          \"step\": 30\n        },\n        {\n          \"expr\": \"kube_pod_container_resource_requests_cpu_cores{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Requested: {{container}}\",\n          \"metric\": \"kube_pod_container_resource_requests_cpu_cores\",\n          \"refId\": \"B\",\n          \"step\": 20\n        },\n        {\n          \"expr\": \"kube_pod_container_resource_limits_cpu_cores{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"10s\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Limit: {{container}}\",\n          \"metric\": \"kube_pod_container_resource_limits_memory_bytes\",\n          \"refId\": \"C\",\n          \"step\": 20\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"CPU Usage\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": \"Prometheus\",\n      \"editable\": true,\n      \"error\": false,\n      \"fill\": 1,\n      \"grid\": {\n        \"threshold1Color\": \"rgba(216, 200, 27, 0.27)\",\n        \"threshold2Color\": \"rgba(234, 112, 112, 0.22)\"\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 40\n      },\n      \"id\": 12,\n      \"isNew\": false,\n      \"legend\": {\n        \"alignAsTable\": false,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": false,\n        \"hideZero\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 2,\n      \"links\": [],\n      \"nullPointMode\": \"connected\",\n      \"paceLength\": 10,\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"expr\": \"sort_desc(sum by (pod) (rate(container_network_receive_bytes_total{pod=~\\\"service-catalog-addons-service-binding-usage-controller.*\\\"}[1m])))\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{pod}}\",\n          \"refId\": \"A\",\n          \"step\": 30\n        }\n      ],\n      \"thresholds\": [],\n      \"timeFrom\": null,\n      \"timeRegions\": [],\n      \"timeShift\": null,\n      \"title\": \"Network I/O\",\n      \"tooltip\": {\n        \"msResolution\": true,\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"cumulative\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"buckets\": null,\n        \"mode\": \"time\",\n        \"name\": null,\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false,\n        \"alignLevel\": null\n      }\n    }\n  ],\n  \"refresh\": \"10s\",\n  \"schemaVersion\": 18,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"service-catalog\",\n    \"kyma\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"service-catalog-apiserver\",\n          \"value\": \"service-catalog-apiserver\"\n        },\n        \"hide\": 2,\n        \"label\": null,\n        \"name\": \"apiserverdeploy\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"service-catalog-apiserver\",\n            \"value\": \"service-catalog-apiserver\"\n          }\n        ],\n        \"query\": \"service-catalog-apiserver\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      },\n      {\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"service-catalog-controller-manager\",\n          \"value\": \"service-catalog-controller-manager\"\n        },\n        \"hide\": 2,\n        \"label\": null,\n        \"name\": \"controllerdeploy\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"service-catalog-controller-manager\",\n            \"value\": \"service-catalog-controller-manager\"\n          }\n        ],\n        \"query\": \"service-catalog-controller-manager\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      },\n      {\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"service-catalog-etcd-stateful-client\",\n          \"value\": \"service-catalog-etcd-stateful-client\"\n        },\n        \"hide\": 2,\n        \"label\": null,\n        \"name\": \"etcd_cluster\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"service-catalog-etcd-stateful-client\",\n            \"value\": \"service-catalog-etcd-stateful-client\"\n          }\n        ],\n        \"query\": \"service-catalog-etcd-stateful-client\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      },\n      {\n        \"current\": {\n          \"selected\": true,\n          \"text\": \"service-catalog-etcd-stateful\",\n          \"value\": \"service-catalog-etcd-stateful\"\n        },\n        \"hide\": 2,\n        \"label\": null,\n        \"name\": \"etcddeploy\",\n        \"options\": [\n          {\n            \"selected\": true,\n            \"text\": \"service-catalog-etcd-stateful\",\n            \"value\": \"service-catalog-etcd-stateful\"\n          }\n        ],\n        \"query\": \"service-catalog-etcd-stateful\",\n        \"skipUrlSync\": false,\n        \"type\": \"constant\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-1h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"\",\n  \"title\": \"Kyma / Service Catalog Add-ons / Binding Usage Controller\",\n  \"uid\": \"_MIdIJiZz\",\n  \"version\": 1\n}",
		},
	}

	// ConfigMap "service-catalog-ui"
	serviceCatalogUiConfigMap = corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-ui",
			Labels: map[string]string{
				"app":   "service-catalog-ui",
				"chart": "service-catalog-ui-0.1.0",
			},
		},
		Data: map[string]string{
			"config.js": "window.clusterConfig = {\n  catalogUrl: '/home/environments/{CURRENT_ENV}/catalog',\n  graphqlApiUrl: 'https://console-backend.ed200f3.dev.kyma.ondemand.com/graphql',\n  subscriptionsApiUrl: 'wss://console-backend.ed200f3.dev.kyma.ondemand.com/graphql',\n};\n",
		},
	}

	// ClusterRole "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerClusterRole = rbacv1.ClusterRole{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-binding-usage-controller",
			Labels: map[string]string{
				"app":      "service-catalog-addons-service-binding-usage-controller",
				"chart":    "service-binding-usage-controller-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
		},
		Rules: []rbacv1.PolicyRule{
			rbacv1.PolicyRule{
				Verbs: []string{
					"create",
					"delete",
				},
				APIGroups: []string{
					"settings.svcat.k8s.io",
				},
				Resources: []string{
					"podpresets",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"get",
					"list",
					"watch",
					"patch",
					"update",
				},
				APIGroups: []string{
					"apps",
				},
				Resources: []string{
					"deployments",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"get",
					"list",
					"watch",
					"patch",
					"update",
				},
				APIGroups: []string{
					"serverless.kyma-project.io",
				},
				Resources: []string{
					"functions",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"get",
					"list",
					"watch",
					"create",
					"update",
					"delete",
				},
				APIGroups: []string{
					"servicecatalog.kyma-project.io",
				},
				Resources: []string{
					"servicebindingusages",
					"usagekinds",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"get",
					"list",
					"watch",
				},
				APIGroups: []string{
					"servicecatalog.k8s.io",
				},
				Resources: []string{
					"servicebindings",
					"serviceinstances",
					"clusterserviceclasses",
					"serviceclasses",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"patch",
					"create",
				},
				APIGroups: []string{
					"",
				},
				Resources: []string{
					"events",
				},
			},
			rbacv1.PolicyRule{
				Verbs: []string{
					"get",
					"delete",
					"update",
				},
				APIGroups: []string{
					"",
				},
				Resources: []string{
					"configmaps",
				},
				ResourceNames: []string{
					"service-binding-usage-controller-process-sbu-spec",
				},
			},
		},
	}

	// ClusterRoleBinding "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerClusterRoleBinding = rbacv1.ClusterRoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-binding-usage-controller",
			Labels: map[string]string{
				"app":      "service-catalog-addons-service-binding-usage-controller",
				"chart":    "service-binding-usage-controller-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
		},
		Subjects: []rbacv1.Subject{
			rbacv1.Subject{
				Kind:      "ServiceAccount",
				Name:      "service-catalog-addons-service-binding-usage-controller",
				Namespace: "kyma-system",
			},
		},
		RoleRef: rbacv1.RoleRef{
			APIGroup: "rbac.authorization.k8s.io",
			Kind:     "ClusterRole",
			Name:     "service-catalog-addons-service-binding-usage-controller",
		},
	}

	// Role "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiRole = rbacv1.Role{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-addons-service-catalog-ui",
			Namespace: "kyma-system",
		},
		Rules: []rbacv1.PolicyRule{
			rbacv1.PolicyRule{
				Verbs: []string{
					"use",
				},
				APIGroups: []string{
					"extensions",
					"policy",
				},
				Resources: []string{
					"podsecuritypolicies",
				},
				ResourceNames: []string{
					"service-catalog-addons-service-catalog-ui",
				},
			},
		},
	}

	// RoleBinding "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiRoleBinding = rbacv1.RoleBinding{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "service-catalog-addons-service-catalog-ui",
			Namespace: "kyma-system",
		},
		Subjects: []rbacv1.Subject{
			rbacv1.Subject{
				Kind:      "ServiceAccount",
				Name:      "service-catalog-addons-service-catalog-ui",
				Namespace: "kyma-system",
			},
		},
		RoleRef: rbacv1.RoleRef{
			APIGroup: "rbac.authorization.k8s.io",
			Kind:     "Role",
			Name:     "service-catalog-addons-service-catalog-ui",
		},
	}

	// Service "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-binding-usage-controller",
			Labels: map[string]string{
				"app":      "service-catalog-addons-service-binding-usage-controller",
				"chart":    "service-binding-usage-controller-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
		},
		Spec: corev1.ServiceSpec{
			Ports: []corev1.ServicePort{
				corev1.ServicePort{
					Name: "http-metrics",
					Port: 8080,
				},
			},
			Selector: map[string]string{
				"app": "service-catalog-addons-service-binding-usage-controller",
			},
		},
	}

	// Service "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiService = corev1.Service{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-catalog-ui",
			Labels: map[string]string{
				"app":      "service-catalog-ui",
				"chart":    "service-catalog-ui-0.1.0",
				"heritage": "Helm",
				"release":  "service-catalog-addons",
			},
		},
		Spec: corev1.ServiceSpec{
			Ports: []corev1.ServicePort{
				corev1.ServicePort{
					Name:     "http2",
					Protocol: "TCP",
					Port:     80,
					TargetPort: utilintstr.IntOrString{
						Type:   0,
						IntVal: 80,
						StrVal: "",
					},
				},
			},
			Selector: map[string]string{
				"app": "service-catalog-ui",
			},
		},
	}

	// Deployment "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerDeploymentAllowPrivilegeEscalationFalse bool  = false
	serviceCatalogAddonsServiceBindingUsageControllerDeploymentPrivilegedFalse               bool  = false
	serviceCatalogAddonsServiceBindingUsageControllerDeploymentReplicas1                     int32 = 1
	serviceCatalogAddonsServiceBindingUsageControllerDeploymentRunAsUser2000                 int64 = 2000

	serviceCatalogAddonsServiceBindingUsageControllerDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-binding-usage-controller",
			Labels: map[string]string{
				"app":                       "service-catalog-addons-service-binding-usage-controller",
				"chart":                     "service-binding-usage-controller-0.1.0",
				"heritage":                  "Helm",
				"kyma-project.io/component": "controller",
				"release":                   "service-catalog-addons",
			},
		},
		Spec: appsv1.DeploymentSpec{
			Replicas: &serviceCatalogAddonsServiceBindingUsageControllerDeploymentReplicas1,
			Selector: &metav1.LabelSelector{
				MatchLabels: map[string]string{
					"app":     "service-catalog-addons-service-binding-usage-controller",
					"release": "service-catalog-addons",
				},
			},
			Template: corev1.PodTemplateSpec{
				ObjectMeta: metav1.ObjectMeta{
					Labels: map[string]string{
						"app":                       "service-catalog-addons-service-binding-usage-controller",
						"kyma-project.io/component": "controller",
						"release":                   "service-catalog-addons",
					},
					Annotations: map[string]string{
						"sidecar.istio.io/inject": "true",
					},
				},
				Spec: corev1.PodSpec{
					Containers: []corev1.Container{
						corev1.Container{
							Name:  "service-binding-usage-controller",
							Image: "eu.gcr.io/kyma-project/service-binding-usage-controller:ef49b0f6",
							Ports: []corev1.ContainerPort{
								corev1.ContainerPort{
									ContainerPort: 8080,
								},
							},
							Env: []corev1.EnvVar{
								corev1.EnvVar{
									Name:  "APP_LOGGER_LEVEL",
									Value: "debug",
								},
								corev1.EnvVar{
									Name:  "APP_APPLIED_SBU_CONFIG_MAP_NAME",
									Value: "service-binding-usage-controller-process-sbu-spec",
								},
								corev1.EnvVar{
									Name:  "APP_APPLIED_SBU_CONFIG_MAP_NAMESPACE",
									Value: "kyma-system",
								},
							},
							Resources: corev1.ResourceRequirements{
								Limits: map[corev1.ResourceName]apiresource.Quantity{
									"cpu":    apiresource.MustParse("100m"),
									"memory": apiresource.MustParse("96Mi"),
								},
								Requests: map[corev1.ResourceName]apiresource.Quantity{
									"cpu":    apiresource.MustParse("50m"),
									"memory": apiresource.MustParse("48Mi"),
								},
							},
							LivenessProbe: &corev1.Probe{
								ProbeHandler: corev1.ProbeHandler{
									HTTPGet: &corev1.HTTPGetAction{
										Path: "/statusz",
										Port: utilintstr.IntOrString{
											Type:   0,
											IntVal: 8080,
											StrVal: "",
										},
									},
								},
								InitialDelaySeconds: 15,
								TimeoutSeconds:      2,
								PeriodSeconds:       10,
								SuccessThreshold:    1,
							},
							ImagePullPolicy: "IfNotPresent",
							SecurityContext: &corev1.SecurityContext{
								Privileged:               &serviceCatalogAddonsServiceBindingUsageControllerDeploymentPrivilegedFalse,
								AllowPrivilegeEscalation: &serviceCatalogAddonsServiceBindingUsageControllerDeploymentAllowPrivilegeEscalationFalse,
							},
						},
					},
					ServiceAccountName: "service-catalog-addons-service-binding-usage-controller",
					SecurityContext: &corev1.PodSecurityContext{
						RunAsUser: &serviceCatalogAddonsServiceBindingUsageControllerDeploymentRunAsUser2000,
					},
					PriorityClassName: "kyma-system",
				},
			},
		},
	}

	// Deployment "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiDeploymentAllowPrivilegeEscalationFalse bool  = false
	serviceCatalogAddonsServiceCatalogUiDeploymentPrivilegedFalse               bool  = false
	serviceCatalogAddonsServiceCatalogUiDeploymentReplicas1                     int32 = 1

	serviceCatalogAddonsServiceCatalogUiDeployment = appsv1.Deployment{
		ObjectMeta: metav1.ObjectMeta{
			Name: "service-catalog-addons-service-catalog-ui",
			Labels: map[string]string{
				"app":                       "service-catalog-ui",
				"chart":                     "service-catalog-ui-0.1.0",
				"heritage":                  "Helm",
				"kyma-project.io/component": "frontend",
				"release":                   "service-catalog-addons",
			},
		},
		Spec: appsv1.DeploymentSpec{
			Replicas: &serviceCatalogAddonsServiceCatalogUiDeploymentReplicas1,
			Selector: &metav1.LabelSelector{
				MatchLabels: map[string]string{
					"app":     "service-catalog-ui",
					"release": "service-catalog-addons",
				},
			},
			Template: corev1.PodTemplateSpec{
				ObjectMeta: metav1.ObjectMeta{
					Labels: map[string]string{
						"app":                       "service-catalog-ui",
						"kyma-project.io/component": "frontend",
						"release":                   "service-catalog-addons",
					},
					Annotations: map[string]string{
						"sidecar.istio.io/inject": "false",
					},
				},
				Spec: corev1.PodSpec{
					Volumes: []corev1.Volume{
						corev1.Volume{
							Name: "config",
							VolumeSource: corev1.VolumeSource{
								ConfigMap: &corev1.ConfigMapVolumeSource{
									LocalObjectReference: corev1.LocalObjectReference{
										Name: "service-catalog-ui",
									},
									Items: []corev1.KeyToPath{
										corev1.KeyToPath{
											Key:  "config.js",
											Path: "config.js",
										},
									},
								},
							},
						},
					},
					Containers: []corev1.Container{
						corev1.Container{
							Name:  "service-catalog-ui",
							Image: "eu.gcr.io/kyma-project/service-catalog-ui:10709d94",
							Ports: []corev1.ContainerPort{
								corev1.ContainerPort{
									ContainerPort: 80,
								},
							},
							Resources: corev1.ResourceRequirements{
								Limits: map[corev1.ResourceName]apiresource.Quantity{
									"cpu":    apiresource.MustParse("60m"),
									"memory": apiresource.MustParse("64Mi"),
								},
								Requests: map[corev1.ResourceName]apiresource.Quantity{
									"cpu":    apiresource.MustParse("10m"),
									"memory": apiresource.MustParse("16Mi"),
								},
							},
							VolumeMounts: []corev1.VolumeMount{
								corev1.VolumeMount{
									Name:      "config",
									MountPath: "/var/public/config",
								},
							},
							ImagePullPolicy: "IfNotPresent",
							SecurityContext: &corev1.SecurityContext{
								Privileged:               &serviceCatalogAddonsServiceCatalogUiDeploymentPrivilegedFalse,
								AllowPrivilegeEscalation: &serviceCatalogAddonsServiceCatalogUiDeploymentAllowPrivilegeEscalationFalse,
							},
						},
					},
					ServiceAccountName: "service-catalog-addons-service-catalog-ui",
					PriorityClassName:  "kyma-system",
				},
			},
		},
	}

	// Unstructured "service-catalog-addons-service-catalog-ui"
	serviceCatalogAddonsServiceCatalogUiUnstructuredDestinationRule = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "networking.istio.io/v1alpha3",
			"kind":       "DestinationRule",
			"metadata": map[string]any{
				"name": "service-catalog-addons-service-catalog-ui",
			},
			"spec": map[string]any{
				"host": "service-catalog-addons-service-catalog-ui.kyma-system.svc.cluster.local",
				"trafficPolicy": map[string]any{
					"tls": map[string]any{
						"mode": "DISABLE",
					},
				},
			},
		},
	}

	// Unstructured "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerUnstructuredPeerAuthentication = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "security.istio.io/v1beta1",
			"kind":       "PeerAuthentication",
			"metadata": map[string]any{
				"name": "service-catalog-addons-service-binding-usage-controller",
			},
			"spec": map[string]any{
				"mtls": map[string]any{
					"mode": "PERMISSIVE",
				},
				"selector": map[string]any{
					"matchLabels": map[string]any{
						"app": "service-catalog-addons-service-binding-usage-controller",
					},
				},
			},
		},
	}

	// Unstructured "service-catalog-addons-service-binding-usage-controller"
	serviceCatalogAddonsServiceBindingUsageControllerUnstructuredServiceMonitor = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "monitoring.coreos.com/v1",
			"kind":       "ServiceMonitor",
			"metadata": map[string]any{
				"labels": map[string]any{
					"app":        "service-catalog-addons-service-binding-usage-controller",
					"chart":      "service-binding-usage-controller-0.1.0",
					"heritage":   "Helm",
					"prometheus": "monitoring",
					"release":    "service-catalog-addons",
				},
				"name": "service-catalog-addons-service-binding-usage-controller",
			},
			"spec": map[string]any{
				"endpoints": []any{
					map[string]any{
						"metricRelabelings": []any{
							map[string]any{
								"action": "keep",
								"regex":  "^(controller_runtime_reconcile_latency_sum|controller_runtime_reconcile_latency_count|controller_runtime_reconcile_queue_length|controller_runtime_reconcile_errors_total|go_gc_duration_seconds|go_goroutines|go_memstats_alloc_bytes|go_memstats_heap_alloc_bytes|go_memstats_heap_inuse_bytes|go_memstats_heap_sys_bytes|go_memstats_stack_inuse_bytes|go_threads|process_cpu_seconds_total|process_max_fds|process_open_fds|process_resident_memory_bytes|process_start_time_seconds|process_virtual_memory_bytes)$",
								"sourceLabels": []any{
									"__name__",
								},
							},
						},
						"port": "http-metrics",
					},
				},
				"namespaceSelector": map[string]any{
					"matchNames": []any{
						"kyma-system",
					},
				},
				"selector": map[string]any{
					"matchLabels": map[string]any{
						"app": "service-catalog-addons-service-binding-usage-controller",
					},
				},
			},
		},
	}

	// Unstructured "deployment"
	deploymentUnstructuredUsageKind = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "servicecatalog.kyma-project.io/v1alpha1",
			"kind":       "UsageKind",
			"metadata": map[string]any{
				"name": "deployment",
			},
			"spec": map[string]any{
				"displayName": "Deployment",
				"labelsPath":  "spec.template.metadata.labels",
				"resource": map[string]any{
					"group":   "apps",
					"kind":    "deployment",
					"version": "v1",
				},
			},
		},
	}

	// Unstructured "service-catalog-addons-service-catalog-ui-catalog"
	serviceCatalogAddonsServiceCatalogUiCatalogUnstructuredVirtualService = v1unstructured.Unstructured{
		Object: map[string]any{
			"apiVersion": "networking.istio.io/v1alpha3",
			"kind":       "VirtualService",
			"metadata": map[string]any{
				"labels": map[string]any{
					"app":      "service-catalog-ui",
					"chart":    "service-catalog-ui-0.1.0",
					"heritage": "Helm",
					"release":  "service-catalog-addons",
				},
				"name": "service-catalog-addons-service-catalog-ui-catalog",
			},
			"spec": map[string]any{
				"gateways": []any{
					"kyma-gateway",
				},
				"hosts": []any{
					"catalog.ed200f3.dev.kyma.ondemand.com",
				},
				"http": []any{
					map[string]any{
						"match": []any{
							map[string]any{
								"uri": map[string]any{
									"regex": "/.*",
								},
							},
						},
						"route": []any{
							map[string]any{
								"destination": map[string]any{
									"host": "service-catalog-addons-service-catalog-ui",
									"port": map[string]any{
										"number": 80,
									},
								},
							},
						},
					},
				},
			},
		},
	}
)
